@using SmartLearning.Shared.Models
@inject HttpClient Http

<EditForm Model="@SubjectModel" OnValidSubmit="@ValidSubmit">
    <DataAnnotationsValidator />
    <label for="name" class="text-dark">Subject Name</label>
    <div class="input-group">

        <InputText Id="name" Class="form-control" bind-Value="@SubjectModel.Name" />
        <div class="input-group-append">
            @if (!ItemSaving)
            {
                <button class="btn btn-secondary" type="submit">Save</button>
            }
            else
            {
                <button class="btn btn-secondary" type="button">
                    <i class="fa fa-cog fa-spin">
                    </i>
                </button>


            }
        </div>

    </div>
    <div class="text-danger">
        <ValidationMessage For="(()=>SubjectModel.Name)" />
    </div>
</EditForm>

@functions{


    private Subject SubjectModel = new Subject();
    bool ItemSaving = false;

    [Parameter] Action CallBack { get; set; }

    async void ValidSubmit()
    {

        ItemSaving = true;
        try
        {
            await Http.PostJsonAsync("api/subject", new Subject { Name = SubjectModel.Name });

            CallBack?.Invoke();

            SubjectModel.Name = null;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Class name '{SubjectModel.Name}' Cannot be added.");
            Console.WriteLine(ex.Message);
        }

        ItemSaving = false;
        StateHasChanged();
    }

}